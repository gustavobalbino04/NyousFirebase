[{"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\Pages\\eventos\\index.jsx":"1","C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\utils\\firebaseConfig.js":"2","C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\Pages\\Login\\index.jsx":"3","C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\index.js":"4","C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\reportWebVitals.js":"5"},{"size":7601,"mtime":1608328535274,"results":"6","hashOfConfig":"7"},{"size":503,"mtime":1608212753722,"results":"8","hashOfConfig":"7"},{"size":2243,"mtime":1608198435888,"results":"9","hashOfConfig":"7"},{"size":841,"mtime":1608330656374,"results":"10","hashOfConfig":"7"},{"size":375,"mtime":1608196875645,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1phocy4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\Pages\\eventos\\index.jsx",["24","25","26","27","28"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Form,  Button, Carousel, Container, Row, Col, Card, label } from 'react-bootstrap';\r\nimport { db , storage} from '../../utils/firebaseConfig';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nconst EventosPage = () => {\r\n    const [eventos, setEventos] = useState([]);\r\n    const [nome, setNome] = useState(' ');\r\n    const [descricao, setDescricao] = useState(' ');\r\n    const [id, setId] = useState(0);\r\n    const _dbEventos = db.collection('eventos');\r\n    const [urlImagem, setUrlImagem] = useState([]);\r\n\r\n    useEffect(() =>{ \r\n        listarEventos();\r\n    }, [])\r\n\r\n    const listarEventos = () => {\r\n        try {\r\n            db.collection('eventos')\r\n            .get()\r\n            .then( result => {\r\n                console.log('Collection Eventos', result.docs);\r\n                const data = result.docs.map(doc =>{\r\n                    return{\r\n                        id : doc.id,\r\n                        nome : doc.data().nome,\r\n                        descricao : doc.data().descricao,\r\n                        urlImagem : doc.data().urlImagem\r\n                    }\r\n                })\r\n                setEventos(data);\r\n            }) \r\n            .catch (error => console.error(error));\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const editar = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            \r\n            _dbEventos.doc(event.target.value)\r\n                .get()\r\n                .then(result => {\r\n                    setId(result.id);\r\n                    setNome(result.data().nome);\r\n                    setDescricao(result.data().descricao);\r\n                    setUrlImagem(result.data().urlImagem)\r\n                })\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const remover = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            _dbEventos\r\n                .doc(event.target.value)\r\n                .delete()\r\n                .then(() =>{\r\n                    alert(\"Evento deletado\");\r\n                    listarEventos();\r\n                    limparCampos();\r\n                })\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const salvar = (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const evento = {\r\n                nome : nome,\r\n                descricao : descricao,\r\n                urlImagem : urlImagem\r\n            }\r\n    \r\n            if(id === 0){\r\n                db.collection('eventos')\r\n                .add(evento)\r\n                .then(() =>{\r\n                    alert(\"evento cadastrado\");\r\n                    listarEventos();\r\n                    limparCampos();\r\n                })\r\n                \r\n            }else{\r\n                db.collection('eventos')\r\n                    .doc(id)\r\n                    .set(evento)\r\n                    .then(() => {\r\n                        alert('Eventos alterado');\r\n                        listarEventos();\r\n                        limparCampos();\r\n                    })\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const limparCampos = () => {\r\n        setId(0);\r\n        setNome('');\r\n        setDescricao('');\r\n        setUrlImagem('');\r\n    }\r\n    const handleUploadError = error =>{\r\n        console.error(error);\r\n    }\r\n    const handleUploadSuccess = filename =>{\r\n        console.log(\"Sucesso uplaod\")\r\n\r\n        storage.ref('imagens')\r\n        .child(filename)\r\n        .getDownloadURL()\r\n        .then(url => setUrlImagem(url))\r\n        .catch(error => console.error(error))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Container>\r\n                <h1>Eventos</h1>\r\n                <p>Gerencie seus eventos</p>\r\n                \r\n\r\n                <Card>\r\n                        <Card.Body>\r\n                        <Form onSubmit={event => salvar(event)}>\r\n                            <Form.Group>\r\n                                {urlImagem && <img src={urlImagem} style={{width : '200px'}} />}\r\n                                <label style={{backgroundColor: \"steelblue\", color: \"white\", padding: 10, borderRadius: 4, cursor: \"pointer\"}}>\r\n                                    Selecione uma imagem\r\n                                <FileUploader\r\n                                    accept=\"image/*\"\r\n                                    name=\"urlImagem\"\r\n                                    randomizeFilename\r\n                                    storageRef={storage.ref('imagens')}\r\n                                    \r\n                                    onUploadError={handleUploadError}\r\n                                    onUploadSuccess={handleUploadSuccess}\r\n                                />\r\n                                </label>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formNome\">\r\n                                <Form.Label>Nome</Form.Label>\r\n                                <Form.Control type=\"text\" value={nome} onChange={event => setNome(event.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId=\"formDescricao\">\r\n                                <Form.Label>Descrição</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={descricao} onChange={event => setDescricao(event.target.value)} />\r\n                            </Form.Group>\r\n                            \r\n\r\n                            <Button type=\"submit\" >Salvar</Button>\r\n                        </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <Table bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th>Nome</th>\r\n                                    <th>Descrição</th>\r\n                                    <th>Ações</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    eventos.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td><img src={item.urlImagem} style={{ width : \"150px\"}}/></td>\r\n                                            <td>{item.nome}</td>\r\n                                            <td>{item.descricao}</td>\r\n                                            <td>\r\n                                                <Button type=\"button\" variant=\"warning\" value={item.id} onClick={ event => editar(event)}>Editar</Button>\r\n                                                <Button type=\"button\" variant=\"danger\" value={item.id} style={{ marginLeft : '30px'}} onClick={ event => remover(event)}>Remover</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default EventosPage;",["29","30"],"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\utils\\firebaseConfig.js",[],"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\Pages\\Login\\index.jsx",[],"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\index.js",["31","32"],"C:\\Users\\balbi\\Desktop\\NyousFirebase\\src\\reportWebVitals.js",[],{"ruleId":"33","severity":1,"message":"34","line":2,"column":32,"nodeType":"35","messageId":"36","endLine":2,"endColumn":40},{"ruleId":"33","severity":1,"message":"37","line":2,"column":53,"nodeType":"35","messageId":"36","endLine":2,"endColumn":56},{"ruleId":"33","severity":1,"message":"38","line":2,"column":58,"nodeType":"35","messageId":"36","endLine":2,"endColumn":61},{"ruleId":"39","severity":1,"message":"40","line":135,"column":47,"nodeType":"41","endLine":135,"endColumn":96},{"ruleId":"39","severity":1,"message":"40","line":181,"column":49,"nodeType":"41","endLine":181,"endColumn":103},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"33","severity":1,"message":"46","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":13},{"ruleId":"33","severity":1,"message":"47","line":6,"column":9,"nodeType":"35","messageId":"36","endLine":6,"endColumn":29},"no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"'Login' is defined but never used.","'firebaseAppProvaider' is defined but never used.","no-global-assign","no-unsafe-negation"]